---
- name: Install app | set app variable
  set_fact: app="{{ app_item.value }}"
  tags: config

- name: Install app | set name variable
  set_fact: name="{{ app_item.key }}"
  tags: config

- debug:
    msg: "Installing app '{{ name }}'"
  tags: config

- block:
    - name: Install app | Make sure the current directory of the webapp is present
      file:
        path: "{{ webapp.installation_path }}/{{ name }}/releases/current"
        state: directory
        mode: 0755

    - name: Install app | Make sure the app symlink of the webapp is present
      file:
        src: "releases/current"
        dest: "{{ webapp.installation_path }}/{{ name }}/current"
        state: link
        force: yes

    - name: "Install app | Add/Update webapp repo"
      git:
        repo: "{{ app.repo.url }}"
        dest: "{{ webapp.installation_path }}/{{ name }}/current"
        version: "{{ app.repo.version | default('master') }}"
        update: yes
        accept_hostkey: true
      when: app.repo.url is defined and app.repo.url != None
      tags: pull

    - name: Install app | Ensure app directories exist
      file:
        path: "{{ webapp.installation_path }}/{{ name }}/{{ item }}"
        state: directory
      with_items: "{{ app.app_dirs | default([]) }}"

    - name: Install app | Make sure the Storage directories are present
      become: yes
      file:
        path: "{{ item }}"
        state: directory
        mode: 0775
        owner: "{{ ansible_user_id }}"
      with_items: "{{ app.storage | default([]) }}"

    - name: Install app | Make sure the storage ACLs for webserver user are present
      acl:
         name: "{{ item }}"
         entity: "{{ apache.user }}"
         etype: user
         permissions: rxw
         state: present
      with_items: "{{ app.storage | default([]) }}"

    - name: Install app | Make sure the storage ACLs with default and webserver user are present
      acl:
         name: "{{ item }}"
         entity: "{{ apache.user }}"
         etype: user
         permissions: rxw
         default: yes
         state: present
      with_items: "{{ app.storage | default([]) }}"

    - name: Install app | Make sure the storage ACLs with current user are present
      acl:
         name: "{{ item }}"
         entity: "{{ ansible_user_id }}"
         etype: user
         permissions: rxw
         default: yes
         state: present
      with_items: "{{ app.storage | default([]) }}"

    - name: Install app | Make sure the app directories with ACLs are present
      file:
        path: "{{ webapp.installation_path }}/{{ name }}/{{ item }}"
        state: directory
      with_items: "{{ app.ACL_dirs | default([]) }}"

    - name: Install app | Make sure the ACLs for app directories for webserver user are present
      acl:
         name: "{{ webapp.installation_path }}/{{ name }}/{{ item }}"
         entity: "{{ apache.user }}"
         etype: user
         permissions: rxw
         state: present
      with_items: "{{ app.ACL_dirs | default([]) }}"

    - name: Install app | Make sure the ACLs for app directories with default and webserver user are present
      acl:
         name: "{{ webapp.installation_path }}/{{ name }}/{{ item }}"
         entity: "{{ apache.user }}"
         etype: user
         permissions: rxw
         default: yes
         state: present
      with_items: "{{ app.ACL_dirs | default([]) }}"

    - name: Install app | Make sure the ACLs for app directories with current user are present
      acl:
         name: "{{ webapp.installation_path }}/{{ name }}/{{ item }}"
         entity: "{{ ansible_user_id }}"
         etype: user
         permissions: rxw
         default: yes
         state: present
      with_items: "{{ app.ACL_dirs | default([]) }}"

    - name: Install app | Create symlinks to storage
      file:
        src: "{{ item.src }}"
        dest: "{{ webapp.installation_path }}/{{ name }}/current/{{ item.dest }}"
        state: link
        force: yes
      with_items: "{{ app.links_to_storage | default([]) }}"

    - name: Install app | Create internal symlinks
      file:
        src: "{{ item.src }}"
        dest: "{{ webapp.installation_path }}/{{ name }}/current/{{ item.dest }}"
        state: link
        force: yes
      with_items: "{{ app.internal_links | default([]) }}"

    - name: Install app | Ensure installation settings are present
      template:
        src: "config.j2"
        dest: "{{ webapp.installation_path }}/{{ name }}/current/{{ item.dest }}"
        follow: yes
      with_items: "{{ app.config | default([]) }}"
      no_log: True
      tags: config

    #- pause: prompt="Make sure the above commands are correct, they will be executed."

    - name: Install app | Run install commands
      shell: "{{ item }}"
      args:
        chdir: "/var/www/{{ name }}/current"
      environment:
        SYMFONY_ENV: prod
      ignore_errors: yes
      changed_when: False
      with_items: "{{ app.install_commands | default([]) }}"
      tags: commands
  when: app.enabled is not defined
