---
- name: Make sure the installation path exists is present
  become: yes
  file:
    path: "{{ webapp.installation_path }}"
    state: directory
    mode: 0777
  when: webapp.installation_path is defined and webapp.installation_path != None

- name: Make sure the current directory of the webapp is present
  file:
    path: "{{ webapp.installation_path }}/{{ webapp.name }}/releases/current"
    state: directory
    mode: 0755
  when: webapp.installation_path is defined and webapp.installation_path != None

- name: Make sure the app symlink of the webapp is present
  file:
    src: "releases/current"
    dest: "{{ webapp.installation_path }}/{{ webapp.name }}/current"
    state: link
    force: yes
  when: webapp.installation_path is defined and webapp.installation_path != None

- name: "Add/Update webapp repo"
  git:
    repo: "{{ webapp.repo.url }}"
    dest: "{{ webapp.installation_path }}/{{ webapp.name }}/current"
    version: "{{ webapp.repo.version | default('master') }}"
    update: yes
    accept_hostkey: true
  when: webapp.repo.url is defined and webapp.repo.url != None and webapp.installation_path is defined and webapp.installation_path != None
  tags:
    - pull

- name: Ensure app directories exist
  file:
    path: "{{ webapp.installation_path }}/{{ webapp.name }}/{{ item }}"
    state: directory
  with_items: "{{ webapp.app_dirs }}"

- name: Make sure the Storage directories are present
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
    owner: "{{ ansible_user_id }}"
  with_items: "{{ webapp.storage }}"

- name: Make sure the storage ACLs for webserver user are present
  acl:
     name: "{{ item }}"
     entity: "{{ apache.user }}"
     etype: user
     permissions: rxw
     state: present
  with_items: "{{ webapp.storage }}"

- name: Make sure the storage ACLs with default and webserver user are present
  acl:
     name: "{{ item }}"
     entity: "{{ apache.user }}"
     etype: user
     permissions: rxw
     default: yes
     state: present
  with_items: "{{ webapp.storage }}"

- name: Make sure the storage ACLs with current user are present
  acl:
     name: "{{ item }}"
     entity: "{{ ansible_user_id }}"
     etype: user
     permissions: rxw
     default: yes
     state: present
  with_items: "{{ webapp.storage }}"

- name: Make sure the app directories with ACLs are present
  file:
    path: "{{ webapp.installation_path }}/{{ webapp.name }}/{{ item }}"
    state: directory
  with_items: "{{ webapp.ACL_dirs }}"

- name: Make sure the ACLs for app directories for webserver user are present
  acl:
     name: "{{ webapp.installation_path }}/{{ webapp.name }}/{{ item }}"
     entity: "{{ apache.user }}"
     etype: user
     permissions: rxw
     state: present
  with_items: "{{ webapp.ACL_dirs }}"

- name: Make sure the ACLs for app directories with default and webserver user are present
  acl:
     name: "{{ webapp.installation_path }}/{{ webapp.name }}/{{ item }}"
     entity: "{{ apache.user }}"
     etype: user
     permissions: rxw
     default: yes
     state: present
  with_items: "{{ webapp.ACL_dirs }}"

- name: Make sure the ACLs for app directories with current user are present
  acl:
     name: "{{ webapp.installation_path }}/{{ webapp.name }}/{{ item }}"
     entity: "{{ ansible_user_id }}"
     etype: user
     permissions: rxw
     default: yes
     state: present
  with_items: "{{ webapp.ACL_dirs }}"

- name: Create symlinks to storage
  file:
    src: "{{ item.src }}"
    dest: "{{ webapp.installation_path }}/{{ webapp.name }}/current/{{ item.dest }}"
    state: link
    force: yes
  with_items: "{{ webapp.links_to_storage }}"

- name: Create internal symlinks
  file:
    src: "{{ item.src }}"
    dest: "{{ webapp.installation_path }}/{{ webapp.name }}/current/{{ item.dest }}"
    state: link
    force: yes
  with_items: "{{ webapp.internal_links }}"

- name: Ensure installation settings are present
  template:
    src: "config.j2"
    dest: "/var/www/{{ webapp.name }}/current/{{ item.dest }}"
    follow: yes
  with_items: "{{ webapp.config }}"
  when: item.dest is defined
  no_log: True
  tags:
    - config

#- pause: prompt="Make sure the above commands are correct, they will be executed."

- name: Run install commands
  shell: "{{ item }}"
  args:
    chdir: "/var/www/{{ webapp.name }}/current"
  environment:
    SYMFONY_ENV: prod
  ignore_errors: yes
  changed_when: False
  with_items: "{{ webapp.install_commands }}"
  tags:
    - commands
